<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blueGemstone.dao.PublicMapper">
	<select id="getVarChangeAvgValue" resultType="java.lang.Float">
		select avg(value) value from VarChange where name=#{name} and createTime&lt;#{time}
		<if test="timeFlag==1">
		 	and updated1=0
		</if>
		<if test="timeFlag==2">
		 	and updated2=0
		</if>
	</select>
	<select id="selectVarChangeLineData" resultType="blueGemstone.entity.VarChange">
		select * from (select convert(varchar(12),CreateTime,108) createTime,value,upLimit,downLimit,ROW_NUMBER() over(order by createtime desc) as rowNumber from VarChange where name=#{name})t where rowNumber between (#{page}-1)*#{row}+1 and #{page}*#{row}
	</select>
	<select id="getVarChangeReportDataCount" resultType="java.lang.Integer">
		select count(*) from VarChange where createTime between DATEADD(D,-7,createTime) and createTime
		<if test="name!=null">
			and name=#{name}
		</if>
	</select>
	<select id="selectVarChangeReportData" resultType="blueGemstone.entity.VarChange">
		select * from (select id,name,convert(varchar,CreateTime,120) createTime,value,state,ROW_NUMBER() over(order by name,createtime) as rowNumber from VarChange where createTime between DATEADD(D,-7,createTime) and createTime
		<if test="name!=null">
			and name=#{name}
		</if>
		)t where rowNumber between (#{page}-1)*#{rows}+1 and #{page}*#{rows}
	</select>
	<select id="selectVarAvgChangeLineData" resultType="blueGemstone.entity.VarAvgChange">
		select * from (select convert(varchar,CreateTime,120) createTime1,convert(varchar(12),CreateTime,108) createTime,value,upLimit,downLimit,ROW_NUMBER() over(order by createtime) as rowNumber from VarAvgChange where 1=1
		<if test="name!=null&amp;name!=''">
			and name=#{name}
		</if>
		<if test="timeSpace==''||timeSpace!=null">
		 	and createTime between DATEADD(D,-1,createTime) and createTime
		</if>
		<if test="timeSpace=='1'">
		 	and createTime between DATEADD(D,-1,createTime) and createTime
		</if>
		<if test="timeSpace=='2'">
		 	and createTime between DATEADD(D,-7,createTime) and createTime
		</if>
		<if test="timeSpace=='3'">
		 	and createTime between DATEADD(D,-30,createTime) and createTime
		</if>
		<if test="timeSpace=='4'">
		 	and createTime between DATEADD(D,-90,createTime) and createTime
		</if>
		 )t where rowNumber between (#{page}-1)*#{rows}+1 and #{page}*#{rows}
	 		and t.createTime1 between #{startTime} and #{endTime}
	</select>
	<select id="selectWarnRecordReportData" resultType="blueGemstone.entity.WarnRecord">
		select * from (select id,name,convert(varchar,CreateTime,120) createTime,value,state,ROW_NUMBER() over(order by name,createtime) as rowNumber from WarnRecord)t where 1=1
		<if test="name!=null">
			and name=#{name}
		</if>
		order by name,createtime
	</select>
	<select id="getWarnHistoryRecordReportDataCount" resultType="java.lang.Integer">
		select count(*) from WarnHistoryRecord where createTime between DATEADD(D,-7,createTime) and createTime
		<if test="name!=null">
			and name=#{name}
		</if>
	</select>
	<select id="selectWarnHistoryRecordReportData" resultType="blueGemstone.entity.WarnHistoryRecord">
		select * from (select id,name,convert(varchar,CreateTime,120) createTime,value,state,ROW_NUMBER() over(order by name,createtime) as rowNumber from WarnHistoryRecord where createTime between DATEADD(D,-7,createTime) and createTime)t where 
		rowNumber between (#{page}-1)*#{rows}+1 and #{page}*#{rows}
		<if test="name!=null">
			and t.name=#{name}
		</if>
	</select>
	<select id="selectLastLoginRecordByName" resultType="blueGemstone.entity.LoginRecord">
		select top 1 * from LoginRecord where name=#{name} order by createTime desc
	</select>
	<select id="getVarStateByName" resultType="java.lang.Integer">
		select top 1 state from VarChange where name=#{name} order by createTime desc
	</select>
	<select id="getWarnRecordCount" resultType="java.lang.Integer">
		select count(*) from WarnRecord where state!=0
	</select>
	<select id="getCurrentVar" resultType="blueGemstone.entity.VarChange">
		select top 32 name,value from VarChange where name in
		<!-- 
		<foreach collection="list" item="name" open="(" close=")" separator=",">
			#{name}
		</foreach>
		 -->
		 (select name from Var where Level=2)
		 order by createTime,name desc
	</select>
	<select id="selectVarWarnLimitData" resultType="blueGemstone.entity.VarWarnLimit">
		select * from VarWarnLimit
	</select>
	<insert id="insertVarChange" parameterType="blueGemstone.entity.VarChange">
		insert into VarChange (id,name,value,upLimit,downLimit,createTime,state,updated1,updated2,memo) values(#{id},#{name},#{value},#{upLimit},#{downLimit},#{createTime},#{state},0,0,#{memo})
	</insert>
	<insert id="insertVarAvgChange" parameterType="blueGemstone.entity.VarAvgChange">
		insert into VarAvgChange (id,name,value,upLimit,downLimit,createTime,state,memo,timeFlag) values(#{id},#{name},#{value},#{upLimit},#{downLimit},#{createTime},#{state},#{memo},#{timeFlag})
	</insert>
	<insert id="insertWarnRecord" parameterType="blueGemstone.entity.WarnRecord">
		insert into WarnRecord (id,name,value,createTime,state,memo) values(#{id},#{name},#{value},#{createTime},#{state},#{memo})
	</insert>
	<insert id="insertWarnHistoryRecord" parameterType="blueGemstone.entity.WarnHistoryRecord">
		insert into WarnHistoryRecord (id,name,value,createTime,state,memo) values(#{id},#{name},#{value},#{createTime},#{state},#{memo})
	</insert>
	<insert id="insertLoginRecord" parameterType="blueGemstone.entity.LoginRecord">
		insert into LoginRecord (userId,name,userType,token,createTime) values(#{userId},#{name},#{userType},#{token},#{createTime})
	</insert>
	<update id="updateVarChange">
		<if test="timeFlag==1">
			update VarChange set updated1=1 where name=#{name} and createTime&lt;#{time} and updated1=0
		</if>
		<if test="timeFlag==2">
			update VarChange set updated2=1 where name=#{name} and createTime&lt;#{time} and updated2=0
		</if>
	</update>
	<delete id="deleteWarnRecordByName">
		delete from WarnRecord where name=#{name}
	</delete>
</mapper>